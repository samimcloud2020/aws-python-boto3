response.json() returns a JSON object of the result (if the result was written in JSON format, if not it raises an error).
Python requests are generally used to fetch the content from a particular resource URI. 

Whenever we make a request to a specified URI through Python, it returns a response object.

Now, this response object would be used to access certain features such as content, headers, etc. 

This article revolves around how to check the response.json() out of a response object. 

It is one of the most used methods in the requests module.
----------------------------------------------------------------------------------------------------------------
import json
import requests

def lambda_handler(event, context):
    params1 = {"country":"us"}
    params2 = {"category":"business"}
    params3 = {"apiKey":"1d38501366bf45ad83a296269ac8ce5e"}
    url = requests.get("https://newsapi.org/v2/top-headlines?country=us&category=business&apiKey=1d38501366bf45ad83a296269ac8ce5e")
    print(type(url))
    print(url)
    if url.status_code == 200:
        data = url.json()  # as url get output is json, so only .json() to get json data
    else:
        print(f"The error code is {url.status_code}")
    return data
----------------------------------------------------------------------------------------------------------------
