======================inheritence=====================================
class Animal():
    def __init__(self):
        print("i am Animal")
    def whoami(self):
        print("i am whoami")
    def eat(self):
        print("i am eat")
        
class Dog(Animal):    # inheritate Animal class
    def __init__(self):
        Animal.__init__(self)
        print("i am dog")
            
#myanimal = Animal()
#print(myanimal)
#print(myanimal.whoami())
#print(myanimal.eat())

mydog = Dog()


i am Animal
i am dog
====================================================
class Animal():
    def __init__(self):
        print("i am Animal")
    def whoami(self):
        print("i am whoami")
    def eat(self):
        print("i am eat")
        
class Dog(Animal):    # inheritate Animal class
    def __init__(self):
        Animal.__init__(self)
        print("i am dog")
            
#myanimal = Animal()
#print(myanimal)
#print(myanimal.whoami())
#print(myanimal.eat())

mydog = Dog()
mydog.eat()
mydog.whoami()



i am Animal
i am dog
i am eat
i am whoami
=========================================================
class Animal():
    def __init__(self):
        print("i am Animal")
    def whoami(self):
        print("i am whoami")
    def eat(self):
        print("i am eat")
        
class Dog(Animal):    # inheritate Animal class
    def __init__(self):
        Animal.__init__(self)
        print("i am dog")
    def whoami(self):
        print("i override parent class method whoami and i am a dog")
            
#myanimal = Animal()
#print(myanimal)
#print(myanimal.whoami())
#print(myanimal.eat())

mydog = Dog()
mydog.eat()
mydog.whoami()


i am Animal
i am dog
i am eat
i override parent class method whoami and i am a dog
=====================POLYMORPHISIM===================================
#POLYMORPHISIM

class Dog():
    def __init__(self,name):
        self.name = name
    def speak(self):
        return self.name  + "  dog wooh"
        
class Cat():
    def __init__(self,name):
        self.name = name
    def speak(self):
        return self.name + "   cat meow"

mydog = Dog("sammy")
print(mydog.speak())

mycat = Cat("catty")
print(mycat.speak())



sammy  dog wooh
catty   cat meow
============================================================
#POLYMORPHISIM
class Animal():
    def __init__(self,name):
        self.name = name
    def speak(self):
        raise NotImplementedError('error')
        
class Dog(Animal):
    def speak(self):
        return self.name  + "  dog wooh"
        
class Cat(Animal):
    def speak(self):
        return self.name + "   cat meow"
        
myanimal = Animal("tiger")
#print(myanimal.speak())

mydog = Dog("sammy")
print(mydog.speak())

mycat = Cat("catty")
print(mycat.speak())


sammy  dog wooh
catty   cat meow
=======================SPECIAL BUILT IN METHOD IN OOP===================================
class Book():
    def __init__(self,name,age):
        self.name = name
        self.age = age
    def __str__(self):
        return f" {self.name } is {self.age}"

mybook = Book("samim", 45)
print(mybook)
print(str(mybook))


samim is 45
 samim is 45
===========================================================
class Book():
    def __init__(self,name,age):
        self.name = name
        self.age = age
    def __str__(self):
        return f" {self.name } is {self.age}"
    def __len__(self):
        return len(self.name)

mybook = Book("samim", 45)
print(mybook)
print(str(mybook))

print(len(mybook))


samim is 45
 samim is 45
5
============================================================
class Book():
    def __init__(self,name,age):
        self.name = name
        self.age = age
    def __str__(self):
        return f" {self.name } is {self.age}"
    def __len__(self):
        return len(self.name)
    def __del__(self):
        return "object deleted"

mybook = Book("samim", 45)
print(mybook)
print(str(mybook))

print(len(mybook))

del mybook   # delete object book



samim is 45
 samim is 45
5
=========================================================
